# ======================================================
# =               Namwoo - Damasco Config              =
# ======================================================
# Copy this file to .env and fill in your actual values.
# DO NOT commit your actual .env file to version control.

# --- Flask App Configuration ---
FLASK_APP=run.py
FLASK_ENV=development # Use 'production' for deployment
SECRET_KEY='generate-a-strong-random-key-here'

# --- Logging Configuration ---
LOG_LEVEL=DEBUG

# --- PostgreSQL Database Configuration ---
DATABASE_URL='postgresql://namwoo_user:your_strong_db_password@localhost:5432/namwoo_db'

# --- Scheduler settings ---
SYNC_INTERVAL_MINUTES=60 # Auto sync interval (set to 0 to disable auto-sync)

# --- LLM Provider Selection ---
LLM_PROVIDER=openai  # Use 'openai' or 'google'

# --- OpenAI API Configuration ---
OPENAI_API_KEY='sk-your-openai-api-key'
OPENAI_EMBEDDING_MODEL='text-embedding-3-small'
OPENAI_CHAT_MODEL='gpt-4o-mini'
OPENAI_MAX_TOKENS=1024
EMBEDDING_DIMENSION=1536

# --- Google Gemini API Configuration (Optional if using Google) ---
GOOGLE_API_KEY='your-google-api-key-here'
GOOGLE_GEMINI_MODEL='gemini-1.5-flash-latest'
GOOGLE_MAX_TOKENS=2048

# --- Damasco Product Source ---
# Path to the JSON file received from the fetcher EC2 instance
DAMASCO_PRODUCTS_FILE_PATH='./data/damasco_products.json'

# This is the shared secret used for HMAC signature verification
DAMASCO_API_SECRET='secret-key-for'

# --- Vector Storage Configuration ---
# Path to prompt file (if not using env var SYSTEM_PROMPT)
PROMPT_FILE_PATH='./data/system_prompt.txt'

# --- Support Board Integration ---
SUPPORT_BOARD_API_URL="https://your-supportboard-domain.com/include/api.php"
SUPPORT_BOARD_API_TOKEN="your_support_board_admin_api_token"
SUPPORT_BOARD_WEBHOOK_SECRET="your_optional_webhook_secret_key"

# Department IDs for routing
SUPPORT_BOARD_SUPPORT_DEPARTMENT_ID=1
SUPPORT_BOARD_SALES_DEPARTMENT_ID=2
SUPPORT_DEPARTMENT_ID=1
SALES_DEPARTMENT_ID=2

# --- Bot and Agent User IDs in Support Board ---
# User ID of THIS Namwoo DM Bot in Support Board
SUPPORT_BOARD_DM_BOT_USER_ID="2" 

# User ID in Support Board that Instagram Page DMs (and thus Comment Bot DMs) are attributed to
# This is typically the admin user linked to the IG page in SB.
COMMENT_BOT_PROXY_USER_ID="1"

# Comma-separated list of User IDs for ACTUAL HUMAN agents in Support Board.
# These are agents who would manually reply to DMs.
# DO NOT include the DM_BOT_ID or COMMENT_BOT_PROXY_USER_ID here.
# Example: "3,4,15" (if users 3, 4, and 15 are your human agents)
SUPPORT_BOARD_AGENT_IDS="3,4,15" # <<< ADJUST THIS TO YOUR ACTUAL HUMAN AGENT IDs

# (Optional) A unique string embedded by the Comment Bot in its initial DMs.
# If your Comment Bot cannot do this, leave this empty.
# If used, use something hard to guess and preferably invisible, e.g., using zero-width spaces.
# Example with zero-width spaces (ensure your editor/system handles these correctly):
# COMMENT_BOT_INITIATION_TAG="\u200B\u200C\u200BCOMMENTBOT_INITIATED"
COMMENT_BOT_INITIATION_TAG="" # <<< SET THIS IF YOUR COMMENT BOT ADDS A TAG, OTHERWISE LEAVE EMPTY

# --- Human Agent Takeover Configuration ---
HUMAN_TAKEOVER_PAUSE_MINUTES=43200 # Pause for 30 days (30 * 24 * 60), effectively "indefinite" for bot

# --- WhatsApp Cloud API Configuration ---
WHATSAPP_CLOUD_API_TOKEN="EAA...your_whatsapp_token..."
WHATSAPP_PHONE_NUMBER_ID="123456789012345"
WHATSAPP_DEFAULT_COUNTRY_CODE="58"
WHATSAPP_API_VERSION="v19.0"
# When sending WhatsApp messages directly via the Cloud API the message may
# already appear in Support Board automatically. Set this to 'false' to avoid
# adding a duplicate internal record via send-message.
LOG_WA_MESSAGES_INTERNALLY=false

# --- Application Specific Settings ---
MAX_HISTORY_MESSAGES=16
PRODUCT_SEARCH_LIMIT=10

# --- System Prompt (Optional) ---
# If using PROMPT_FILE_PATH, you can leave this empty or as default.
# Otherwise, paste a short inline prompt here.
SYSTEM_PROMPT="Default assistant prompt. Load full prompt from PROMPT_FILE_PATH if needed."

# --- Celery Configuration (Celery 5+ expects lowercase keys) ---
broker_url=redis://localhost:6379/0
result_backend=redis://localhost:6379/0
task_serializer=json
result_serializer=json
accept_content=json
timezone=America/Caracas
enable_utc=true
# Redis connection URL and idempotency TTL
REDIS_URL=redis://localhost:6379/0
IDEMPOTENCY_TTL=300
